definitions:
  dto.RequestAddSegmentsToUser:
    properties:
      id:
        type: integer
      segments:
        items:
          $ref: '#/definitions/service.Segment_AddSegmentsToUser'
        type: array
    required:
    - id
    - segments
    type: object
  dto.RequestCreateSegment:
    properties:
      slug:
        type: string
      user_percent:
        type: integer
    required:
    - slug
    type: object
  dto.RequestCreateUser:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  dto.RequestDeleteSegment:
    properties:
      slug:
        type: string
    required:
    - slug
    type: object
  dto.RequestDeleteSegmentsFromUser:
    properties:
      id:
        type: integer
      segments:
        items:
          $ref: '#/definitions/service.Segment_DeleteSegmentsFromUser'
        type: array
    required:
    - id
    - segments
    type: object
  dto.RequestDeleteUser:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  httpresponse.Response:
    properties:
      error:
        type: string
      response: {}
      status:
        type: string
    type: object
  service.Expire:
    properties:
      days:
        type: integer
      hours:
        type: integer
      minutes:
        type: integer
    type: object
  service.Segment_AddSegmentsToUser:
    properties:
      expire:
        $ref: '#/definitions/service.Expire'
      slug:
        type: string
    required:
    - slug
    type: object
  service.Segment_DeleteSegmentsFromUser:
    properties:
      slug:
        type: string
    required:
    - slug
    type: object
info:
  contact: {}
paths:
  /history:
    get:
      consumes:
      - application/json
      description: Возвращает историю добавления/удаления сегментов пользователю
      parameters:
      - description: user_id
        in: query
        name: user_id
        type: integer
      - description: Месяц
        in: query
        name: month
        required: true
        type: string
      - description: Год
        in: query
        name: year
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: csv
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponse.Response'
      summary: GetHistory
      tags:
      - History
  /segment:
    delete:
      consumes:
      - application/json
      description: Удаляет сегмент
      parameters:
      - description: slug
        in: body
        name: slug
        required: true
        schema:
          $ref: '#/definitions/dto.RequestDeleteSegment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponse.Response'
      summary: DeleteSegment
      tags:
      - Segment
  /segment/new:
    post:
      consumes:
      - application/json
      description: Создает сегмент
      parameters:
      - description: slug
        in: body
        name: slug
        required: true
        schema:
          $ref: '#/definitions/dto.RequestCreateSegment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponse.Response'
      summary: CreateSegment
      tags:
      - Segment
  /user:
    delete:
      consumes:
      - application/json
      description: Удаляет пользователя
      parameters:
      - description: username
        in: body
        name: username
        required: true
        schema:
          $ref: '#/definitions/dto.RequestDeleteUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponse.Response'
      summary: DeleteUser
      tags:
      - User
  /user/new:
    post:
      consumes:
      - application/json
      description: Создает пользователя
      parameters:
      - description: username
        in: body
        name: username
        required: true
        schema:
          $ref: '#/definitions/dto.RequestCreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponse.Response'
      summary: CreateUser
      tags:
      - User
  /user/segments:
    delete:
      consumes:
      - application/json
      description: Удаляет сегменты пользователя
      parameters:
      - description: id
        in: body
        name: segments
        required: true
        schema:
          $ref: '#/definitions/dto.RequestDeleteSegmentsFromUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponse.Response'
      summary: DeleteSegmentsFromUser
      tags:
      - User
  /user/segments/{id}:
    get:
      consumes:
      - application/json
      description: Возвращает сегметы пользователя
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponse.Response'
      summary: GetUsersSegments
      tags:
      - User
  /user/segments/add:
    post:
      consumes:
      - application/json
      description: Добавляет сегменты пользователю
      parameters:
      - description: id
        in: body
        name: segments
        required: true
        schema:
          $ref: '#/definitions/dto.RequestAddSegmentsToUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponse.Response'
      summary: AddSegmentsToUser
      tags:
      - User
swagger: "2.0"
